# Generated by Django 3.2.9 on 2021-11-27 01:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identification_number', models.TextField(max_length=30, unique=True, verbose_name='identification')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('name', models.TextField(max_length=255, verbose_name='Name')),
                ('last_name', models.TextField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('city', models.TextField(max_length=30, verbose_name='city')),
                ('direction', models.TextField(max_length=50, verbose_name='direction')),
                ('phone_number', models.TextField(blank=True, max_length=25, null=True, verbose_name='phone number')),
                ('date_born', models.DateField(verbose_name='date born')),
                ('gender', models.TextField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='gender')),
                ('person_type', models.TextField(choices=[('S', 'Student'), ('T', 'Teacher')], max_length=1, verbose_name='person type')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateField(auto_now=True, verbose_name='modified at')),
                ('deleted_at', models.DateField(auto_now=True, null=True, verbose_name='deleted at')),
                ('number', models.IntegerField(unique=True, verbose_name='number of department')),
                ('name', models.TextField(max_length=50, verbose_name='department name')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.IntegerField(unique=True, verbose_name='number of Teacher')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.department')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
